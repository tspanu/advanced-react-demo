{"id":"../node_modules/airbnb-prop-types/build/uniqueArrayOf.js","dependencies":[{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/uniqueArrayOf.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/package.json","includedInParent":true,"mtime":1542930367368},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/.babelrc","includedInParent":true,"mtime":1540760186263},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/package.json","includedInParent":true,"mtime":1542929074985},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/.babelrc","includedInParent":true,"mtime":499162500000},{"name":"object.assign","loc":{"line":6,"column":22},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/uniqueArrayOf.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/object.assign/index.js"},{"name":"prop-types","loc":{"line":10,"column":25},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/uniqueArrayOf.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/prop-types/index.js"},{"name":"./and","loc":{"line":12,"column":19},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/uniqueArrayOf.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/and.js"},{"name":"./uniqueArray","loc":{"line":16,"column":27},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/uniqueArrayOf.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/uniqueArray.js"}],"generated":{"js":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = uniqueArrayOfTypeValidator;\n\nvar _object = require('object.assign');\n\nvar _object2 = _interopRequireDefault(_object);\n\nvar _propTypes = require('prop-types');\n\nvar _and = require('./and');\n\nvar _and2 = _interopRequireDefault(_and);\n\nvar _uniqueArray = require('./uniqueArray');\n\nvar _uniqueArray2 = _interopRequireDefault(_uniqueArray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar unique = (0, _uniqueArray2['default'])();\n\nfunction uniqueArrayOfTypeValidator(type) {\n  if (typeof type !== 'function') {\n    throw new TypeError('type must be a validator function');\n  }\n\n  var mapper = null;\n  var name = 'uniqueArrayOfType';\n\n  for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n\n  if (rest.length === 1) {\n    if (typeof rest[0] === 'function') {\n      mapper = rest[0];\n    } else if (typeof rest[0] === 'string') {\n      name = rest[0];\n    } else {\n      throw new TypeError('single input must either be string or function');\n    }\n  } else if (rest.length === 2) {\n    if (typeof rest[0] === 'function' && typeof rest[1] === 'string') {\n      mapper = rest[0];\n      name = rest[1];\n    } else {\n      throw new TypeError('multiple inputs must be in [function, string] order');\n    }\n  } else if (rest.length > 2) {\n    throw new TypeError('only [], [name], [mapper], and [mapper, name] are valid inputs');\n  }\n\n  function uniqueArrayOfMapped(props, propName) {\n    var propValue = props[propName];\n\n    if (propValue == null) {\n      return null;\n    }\n\n    var values = propValue.map(mapper);\n\n    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    return unique.apply(undefined, [(0, _object2['default'])({}, props, _defineProperty({}, propName, values)), propName].concat(args));\n  }\n\n  uniqueArrayOfMapped.isRequired = function () {\n    function isRequired(props, propName) {\n      var propValue = props[propName];\n\n      for (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n        args[_key3 - 2] = arguments[_key3];\n      }\n\n      if (propValue == null) {\n        return _propTypes.array.isRequired.apply(_propTypes.array, [props, propName].concat(args));\n      }\n      return uniqueArrayOfMapped.apply(undefined, [props, propName].concat(args));\n    }\n\n    return isRequired;\n  }();\n\n  var arrayValidator = (0, _propTypes.arrayOf)(type);\n\n  var uniqueValidator = mapper ? uniqueArrayOfMapped : unique;\n\n  var validator = (0, _and2['default'])([arrayValidator, uniqueValidator], name);\n  validator.isRequired = (0, _and2['default'])([uniqueValidator.isRequired, arrayValidator.isRequired], String(name) + '.isRequired');\n\n  return validator;\n}\n","map":{"version":3,"sources":["../src/uniqueArrayOf.js"],"names":["uniqueArrayOfTypeValidator","unique","type","TypeError","mapper","name","rest","length","uniqueArrayOfMapped","props","propName","propValue","values","map","args","isRequired","array","arrayValidator","uniqueValidator","validator"],"mappings":";;;qBAMwBA,0B;;;;;;AANxB;;AACA;;;;AACA;;;;;;;;AAEA,IAAMC,SAAS,+BAAf;;AAEe,SAASD,0BAAT,CAAoCE,IAApC,EAAmD;AAChE,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9B,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AACD;;AAED,MAAIC,SAAS,IAAb;AACA,MAAIC,OAAO,mBAAX;;AANgE,oCAANC,IAAM;AAANA,QAAM;AAAA;;AAQhE,MAAIA,KAAKC,MAAL,KAAgB,CAApB,EAAuB;AACrB,QAAI,OAAOD,KAAK,CAAL,CAAP,KAAmB,UAAvB,EAAmC;AAC/BF,YAD+B,GACrBE,IADqB;AAElC,KAFD,MAEO,IAAI,OAAOA,KAAK,CAAL,CAAP,KAAmB,QAAvB,EAAiC;AACpCD,UADoC,GAC5BC,IAD4B;AAEvC,KAFM,MAEA;AACL,YAAM,IAAIH,SAAJ,CAAc,gDAAd,CAAN;AACD;AACF,GARD,MAQO,IAAIG,KAAKC,MAAL,KAAgB,CAApB,EAAuB;AAC5B,QAAI,OAAOD,KAAK,CAAL,CAAP,KAAmB,UAAnB,IAAiC,OAAOA,KAAK,CAAL,CAAP,KAAmB,QAAxD,EAAkE;AAC9DF,YAD8D,GAC9CE,IAD8C;AACtDD,UADsD,GAC9CC,IAD8C;AAEjE,KAFD,MAEO;AACL,YAAM,IAAIH,SAAJ,CAAc,qDAAd,CAAN;AACD;AACF,GANM,MAMA,IAAIG,KAAKC,MAAL,GAAc,CAAlB,EAAqB;AAC1B,UAAM,IAAIJ,SAAJ,CAAc,gEAAd,CAAN;AACD;;AAED,WAASK,mBAAT,CAA6BC,KAA7B,EAAoCC,QAApC,EAAuD;AAAA,QACjCC,SADiC,GACnBF,KADmB,CAC5CC,QAD4C;;AAErD,QAAIC,aAAa,IAAjB,EAAuB;AACrB,aAAO,IAAP;AACD;;AAED,QAAMC,SAASD,UAAUE,GAAV,CAAcT,MAAd,CAAf;;AANqD,uCAANU,IAAM;AAANA,UAAM;AAAA;;AAOrD,WAAOb,sDAAYQ,KAAZ,sBAAoBC,QAApB,EAA+BE,MAA/B,IAAyCF,QAAzC,SAAsDI,IAAtD,EAAP;AACD;;AAEDN,sBAAoBO,UAApB;AAAiC,aAASA,UAAT,CAAoBN,KAApB,EAA2BC,QAA3B,EAA8C;AAAA,UACzDC,SADyD,GAC3CF,KAD2C,CACpEC,QADoE;;AAAA,yCAANI,IAAM;AAANA,YAAM;AAAA;;AAE7E,UAAIH,aAAa,IAAjB,EAAuB;AACrB,eAAOK,iBAAMD,UAAN,0BAAiBN,KAAjB,EAAwBC,QAAxB,SAAqCI,IAArC,EAAP;AACD;AACD,aAAON,sCAAoBC,KAApB,EAA2BC,QAA3B,SAAwCI,IAAxC,EAAP;AACD;;AAND,WAA0CC,UAA1C;AAAA;;AAQA,MAAME,iBAAiB,wBAAQf,IAAR,CAAvB;;AAEA,MAAMgB,kBAAkBd,SAASI,mBAAT,GAA+BP,MAAvD;;AAEA,MAAMkB,YAAY,sBAAI,CAACF,cAAD,EAAiBC,eAAjB,CAAJ,EAAuCb,IAAvC,CAAlB;AACAc,YAAUJ,UAAV,GAAuB,sBAAI,CACzBG,gBAAgBH,UADS,EAEzBE,eAAeF,UAFU,CAAJ,SAGjBV,IAHiB,kBAAvB;;AAKA,SAAOc,SAAP;AACD","file":"uniqueArrayOf.js","sourcesContent":["import { arrayOf, array } from 'prop-types';\nimport and from './and';\nimport uniqueArray from './uniqueArray';\n\nconst unique = uniqueArray();\n\nexport default function uniqueArrayOfTypeValidator(type, ...rest) {\n  if (typeof type !== 'function') {\n    throw new TypeError('type must be a validator function');\n  }\n\n  let mapper = null;\n  let name = 'uniqueArrayOfType';\n\n  if (rest.length === 1) {\n    if (typeof rest[0] === 'function') {\n      ([mapper] = rest);\n    } else if (typeof rest[0] === 'string') {\n      ([name] = rest);\n    } else {\n      throw new TypeError('single input must either be string or function');\n    }\n  } else if (rest.length === 2) {\n    if (typeof rest[0] === 'function' && typeof rest[1] === 'string') {\n      ([mapper, name] = rest);\n    } else {\n      throw new TypeError('multiple inputs must be in [function, string] order');\n    }\n  } else if (rest.length > 2) {\n    throw new TypeError('only [], [name], [mapper], and [mapper, name] are valid inputs');\n  }\n\n  function uniqueArrayOfMapped(props, propName, ...args) {\n    const { [propName]: propValue } = props;\n    if (propValue == null) {\n      return null;\n    }\n\n    const values = propValue.map(mapper);\n    return unique({ ...props, [propName]: values }, propName, ...args);\n  }\n\n  uniqueArrayOfMapped.isRequired = function isRequired(props, propName, ...args) {\n    const { [propName]: propValue } = props;\n    if (propValue == null) {\n      return array.isRequired(props, propName, ...args);\n    }\n    return uniqueArrayOfMapped(props, propName, ...args);\n  };\n\n  const arrayValidator = arrayOf(type);\n\n  const uniqueValidator = mapper ? uniqueArrayOfMapped : unique;\n\n  const validator = and([arrayValidator, uniqueValidator], name);\n  validator.isRequired = and([\n    uniqueValidator.isRequired,\n    arrayValidator.isRequired,\n  ], `${name}.isRequired`);\n\n  return validator;\n}\n"]}},"hash":"9c96c4339506ada76dc97157fa10dae1","cacheData":{"env":{}}}