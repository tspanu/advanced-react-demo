{"id":"../node_modules/airbnb-prop-types/build/valuesOf.js","dependencies":[{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/valuesOf.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/package.json","includedInParent":true,"mtime":1543309168837},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/.babelrc","includedInParent":true,"mtime":1543309084056},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/package.json","includedInParent":true,"mtime":1542929074985},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/.babelrc","includedInParent":true,"mtime":499162500000},{"name":"./helpers/isPrimitive","loc":{"line":6,"column":27},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/valuesOf.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/helpers/isPrimitive.js"},{"name":"./helpers/wrapValidator","loc":{"line":10,"column":29},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/valuesOf.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/helpers/wrapValidator.js"}],"generated":{"js":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = valuesOfValidator;\n\nvar _isPrimitive = require('./helpers/isPrimitive');\n\nvar _isPrimitive2 = _interopRequireDefault(_isPrimitive);\n\nvar _wrapValidator = require('./helpers/wrapValidator');\n\nvar _wrapValidator2 = _interopRequireDefault(_wrapValidator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// code adapted from https://github.com/facebook/react/blob/14156e56b9cf18ac86963185c5af4abddf3ff811/src/isomorphic/classic/types/ReactPropTypes.js#L307-L340\n\nfunction valuesOfValidator(propType) {\n  if (typeof propType !== 'function') {\n    throw new TypeError('objectOf: propType must be a function');\n  }\n\n  var validator = function () {\n    function valuesOf(props, propName, componentName, location, propFullName) {\n      for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n        rest[_key - 5] = arguments[_key];\n      }\n\n      var propValue = props[propName];\n\n      if (propValue == null || (0, _isPrimitive2['default'])(propValue)) {\n        return null;\n      }\n\n      var firstError = void 0;\n      Object.keys(propValue).some(function (key) {\n        firstError = propType.apply(undefined, [propValue, key, componentName, location, String(propFullName) + '.' + String(key)].concat(rest));\n        return firstError;\n      });\n      return firstError || null;\n    }\n\n    return valuesOf;\n  }();\n  validator.isRequired = function () {\n    function valuesOfRequired(props, propName, componentName) {\n      var propValue = props[propName];\n\n      if (propValue == null) {\n        return new TypeError(String(componentName) + ': ' + String(propName) + ' is required.');\n      }\n\n      for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n        rest[_key2 - 3] = arguments[_key2];\n      }\n\n      return validator.apply(undefined, [props, propName, componentName].concat(rest));\n    }\n\n    return valuesOfRequired;\n  }();\n\n  return (0, _wrapValidator2['default'])(validator, 'valuesOf', propType);\n}\n","map":{"version":3,"sources":["../src/valuesOf.js"],"names":["valuesOfValidator","propType","TypeError","validator","valuesOf","props","propName","componentName","location","propFullName","rest","propValue","firstError","Object","keys","some","key","isRequired","valuesOfRequired"],"mappings":";;;qBAKwBA,iB;;AALxB;;;;AACA;;;;;;AAEA;;AAEe,SAASA,iBAAT,CAA2BC,QAA3B,EAAqC;AAClD,MAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,UAAM,IAAIC,SAAJ,CAAc,uCAAd,CAAN;AACD;;AAED,MAAMC;AAAY,aAASC,QAAT,CAChBC,KADgB,EAEhBC,QAFgB,EAGhBC,aAHgB,EAIhBC,QAJgB,EAKhBC,YALgB,EAOhB;AAAA,wCADGC,IACH;AADGA,YACH;AAAA;;AAAA,UACoBC,SADpB,GACkCN,KADlC,CACSC,QADT;;AAEA,UAAIK,aAAa,IAAb,IAAqB,8BAAYA,SAAZ,CAAzB,EAAiD;AAC/C,eAAO,IAAP;AACD;;AAED,UAAIC,mBAAJ;AACAC,aAAOC,IAAP,CAAYH,SAAZ,EAAuBI,IAAvB,CAA4B,UAACC,GAAD,EAAS;AACnCJ,qBAAaX,2BACXU,SADW,EAEXK,GAFW,EAGXT,aAHW,EAIXC,QAJW,SAKRC,YALQ,iBAKQO,GALR,UAMRN,IANQ,EAAb;AAQA,eAAOE,UAAP;AACD,OAVD;AAWA,aAAOA,cAAc,IAArB;AACD;;AA1BK,WAAqBR,QAArB;AAAA,KAAN;AA2BAD,YAAUc,UAAV;AAAuB,aAASC,gBAAT,CAA0Bb,KAA1B,EAAiCC,QAAjC,EAA2CC,aAA3C,EAAmE;AAAA,UACpEI,SADoE,GACtDN,KADsD,CAC/EC,QAD+E;;AAExF,UAAIK,aAAa,IAAjB,EAAuB;AACrB,eAAO,IAAIT,SAAJ,QAAiBK,aAAjB,kBAAmCD,QAAnC,oBAAP;AACD;;AAJuF,yCAANI,IAAM;AAANA,YAAM;AAAA;;AAKxF,aAAOP,4BAAUE,KAAV,EAAiBC,QAAjB,EAA2BC,aAA3B,SAA6CG,IAA7C,EAAP;AACD;;AAND,WAAgCQ,gBAAhC;AAAA;;AAQA,SAAO,gCAAcf,SAAd,EAAyB,UAAzB,EAAqCF,QAArC,CAAP;AACD","file":"valuesOf.js","sourcesContent":["import isPrimitive from './helpers/isPrimitive';\nimport wrapValidator from './helpers/wrapValidator';\n\n// code adapted from https://github.com/facebook/react/blob/14156e56b9cf18ac86963185c5af4abddf3ff811/src/isomorphic/classic/types/ReactPropTypes.js#L307-L340\n\nexport default function valuesOfValidator(propType) {\n  if (typeof propType !== 'function') {\n    throw new TypeError('objectOf: propType must be a function');\n  }\n\n  const validator = function valuesOf(\n    props,\n    propName,\n    componentName,\n    location,\n    propFullName,\n    ...rest\n  ) {\n    const { [propName]: propValue } = props;\n    if (propValue == null || isPrimitive(propValue)) {\n      return null;\n    }\n\n    let firstError;\n    Object.keys(propValue).some((key) => {\n      firstError = propType(\n        propValue,\n        key,\n        componentName,\n        location,\n        `${propFullName}.${key}`,\n        ...rest,\n      );\n      return firstError;\n    });\n    return firstError || null;\n  };\n  validator.isRequired = function valuesOfRequired(props, propName, componentName, ...rest) {\n    const { [propName]: propValue } = props;\n    if (propValue == null) {\n      return new TypeError(`${componentName}: ${propName} is required.`);\n    }\n    return validator(props, propName, componentName, ...rest);\n  };\n\n  return wrapValidator(validator, 'valuesOf', propType);\n}\n"]}},"hash":"566878a31d3d181ab445499234713066","cacheData":{"env":{}}}