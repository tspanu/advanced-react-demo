{"id":"../node_modules/airbnb-prop-types/build/mutuallyExclusiveTrueProps.js","dependencies":[{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/mutuallyExclusiveTrueProps.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/package.json","includedInParent":true,"mtime":1543301183752},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/.babelrc","includedInParent":true,"mtime":1543300678905},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/package.json","includedInParent":true,"mtime":1542929074985},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/.babelrc","includedInParent":true,"mtime":499162500000},{"name":"prop-types","loc":{"line":6,"column":25},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/mutuallyExclusiveTrueProps.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/prop-types/index.js"},{"name":"./helpers/wrapValidator","loc":{"line":8,"column":29},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/mutuallyExclusiveTrueProps.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/helpers/wrapValidator.js"}],"generated":{"js":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = mutuallyExclusiveTrue;\n\nvar _propTypes = require('prop-types');\n\nvar _wrapValidator = require('./helpers/wrapValidator');\n\nvar _wrapValidator2 = _interopRequireDefault(_wrapValidator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction mutuallyExclusiveTrue() {\n  for (var _len = arguments.length, exclusiveProps = Array(_len), _key = 0; _key < _len; _key++) {\n    exclusiveProps[_key] = arguments[_key];\n  }\n\n  if (exclusiveProps.length < 1) {\n    throw new TypeError('at least one prop that is mutually exclusive is required');\n  }\n  if (!exclusiveProps.every(function (x) {\n    return typeof x === 'string';\n  })) {\n    throw new TypeError('all exclusive true props must be strings');\n  }\n\n  var propsList = exclusiveProps.join(', or ');\n\n  var validator = function () {\n    function mutuallyExclusiveTrueProps(props, propName, componentName) {\n      var countProps = function () {\n        function countProps(count, prop) {\n          return count + (props[prop] ? 1 : 0);\n        }\n\n        return countProps;\n      }();\n\n      var exclusivePropCount = exclusiveProps.reduce(countProps, 0);\n      if (exclusivePropCount > 1) {\n        return new Error('A ' + String(componentName) + ' cannot have more than one of these boolean props be true: ' + String(propsList));\n      }\n\n      for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n        rest[_key2 - 3] = arguments[_key2];\n      }\n\n      return _propTypes.bool.apply(undefined, [props, propName, componentName].concat(rest));\n    }\n\n    return mutuallyExclusiveTrueProps;\n  }();\n\n  validator.isRequired = function () {\n    function mutuallyExclusiveTruePropsRequired(props, propName, componentName) {\n      var countProps = function () {\n        function countProps(count, prop) {\n          return count + (props[prop] ? 1 : 0);\n        }\n\n        return countProps;\n      }();\n\n      var exclusivePropCount = exclusiveProps.reduce(countProps, 0);\n      if (exclusivePropCount > 1) {\n        return new Error('A ' + String(componentName) + ' cannot have more than one of these boolean props be true: ' + String(propsList));\n      }\n\n      for (var _len3 = arguments.length, rest = Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n        rest[_key3 - 3] = arguments[_key3];\n      }\n\n      return _propTypes.bool.isRequired.apply(_propTypes.bool, [props, propName, componentName].concat(rest));\n    }\n\n    return mutuallyExclusiveTruePropsRequired;\n  }();\n\n  return (0, _wrapValidator2['default'])(validator, 'mutuallyExclusiveTrueProps: ' + String(propsList), exclusiveProps);\n}\n","map":{"version":3,"sources":["../src/mutuallyExclusiveTrueProps.js"],"names":["mutuallyExclusiveTrue","exclusiveProps","length","TypeError","every","x","propsList","join","validator","mutuallyExclusiveTrueProps","props","propName","componentName","countProps","count","prop","exclusivePropCount","reduce","Error","rest","bool","isRequired","mutuallyExclusiveTruePropsRequired"],"mappings":";;;qBAGwBA,qB;;AAHxB;;AACA;;;;;;AAEe,SAASA,qBAAT,GAAkD;AAAA,oCAAhBC,cAAgB;AAAhBA,kBAAgB;AAAA;;AAC/D,MAAIA,eAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,UAAM,IAAIC,SAAJ,CAAc,0DAAd,CAAN;AACD;AACD,MAAI,CAACF,eAAeG,KAAf,CAAqB;AAAA,WAAK,OAAOC,CAAP,KAAa,QAAlB;AAAA,GAArB,CAAL,EAAuD;AACrD,UAAM,IAAIF,SAAJ,CAAc,0CAAd,CAAN;AACD;;AAED,MAAMG,YAAYL,eAAeM,IAAf,CAAoB,OAApB,CAAlB;;AAEA,MAAMC;AAAY,aAASC,0BAAT,CAAoCC,KAApC,EAA2CC,QAA3C,EAAqDC,aAArD,EAA6E;AAC7F,UAAMC;AAAa,iBAAbA,UAAa,CAACC,KAAD,EAAQC,IAAR;AAAA,iBAAkBD,SAASJ,MAAMK,IAAN,IAAc,CAAd,GAAkB,CAA3B,CAAlB;AAAA;;AAAb;AAAA,SAAN;;AAEA,UAAMC,qBAAqBf,eAAegB,MAAf,CAAsBJ,UAAtB,EAAkC,CAAlC,CAA3B;AACA,UAAIG,qBAAqB,CAAzB,EAA4B;AAC1B,eAAO,IAAIE,KAAJ,eAAeN,aAAf,2EAA0FN,SAA1F,EAAP;AACD;;AAN4F,yCAANa,IAAM;AAANA,YAAM;AAAA;;AAO7F,aAAOC,kCAAKV,KAAL,EAAYC,QAAZ,EAAsBC,aAAtB,SAAwCO,IAAxC,EAAP;AACD;;AARK,WAAqBV,0BAArB;AAAA,KAAN;;AAUAD,YAAUa,UAAV;AAAuB,aAASC,kCAAT,CACrBZ,KADqB,EAErBC,QAFqB,EAGrBC,aAHqB,EAKrB;AACA,UAAMC;AAAa,iBAAbA,UAAa,CAACC,KAAD,EAAQC,IAAR;AAAA,iBAAkBD,SAASJ,MAAMK,IAAN,IAAc,CAAd,GAAkB,CAA3B,CAAlB;AAAA;;AAAb;AAAA,SAAN;;AAEA,UAAMC,qBAAqBf,eAAegB,MAAf,CAAsBJ,UAAtB,EAAkC,CAAlC,CAA3B;AACA,UAAIG,qBAAqB,CAAzB,EAA4B;AAC1B,eAAO,IAAIE,KAAJ,eAAeN,aAAf,2EAA0FN,SAA1F,EAAP;AACD;;AAND,yCADGa,IACH;AADGA,YACH;AAAA;;AAOA,aAAOC,gBAAKC,UAAL,yBAAgBX,KAAhB,EAAuBC,QAAvB,EAAiCC,aAAjC,SAAmDO,IAAnD,EAAP;AACD;;AAbD,WAAgCG,kCAAhC;AAAA;;AAeA,SAAO,gCAAcd,SAAd,0CAAwDF,SAAxD,GAAqEL,cAArE,CAAP;AACD","file":"mutuallyExclusiveTrueProps.js","sourcesContent":["import { bool } from 'prop-types';\nimport wrapValidator from './helpers/wrapValidator';\n\nexport default function mutuallyExclusiveTrue(...exclusiveProps) {\n  if (exclusiveProps.length < 1) {\n    throw new TypeError('at least one prop that is mutually exclusive is required');\n  }\n  if (!exclusiveProps.every(x => typeof x === 'string')) {\n    throw new TypeError('all exclusive true props must be strings');\n  }\n\n  const propsList = exclusiveProps.join(', or ');\n\n  const validator = function mutuallyExclusiveTrueProps(props, propName, componentName, ...rest) {\n    const countProps = (count, prop) => (count + (props[prop] ? 1 : 0));\n\n    const exclusivePropCount = exclusiveProps.reduce(countProps, 0);\n    if (exclusivePropCount > 1) {\n      return new Error(`A ${componentName} cannot have more than one of these boolean props be true: ${propsList}`);\n    }\n    return bool(props, propName, componentName, ...rest);\n  };\n\n  validator.isRequired = function mutuallyExclusiveTruePropsRequired(\n    props,\n    propName,\n    componentName,\n    ...rest\n  ) {\n    const countProps = (count, prop) => (count + (props[prop] ? 1 : 0));\n\n    const exclusivePropCount = exclusiveProps.reduce(countProps, 0);\n    if (exclusivePropCount > 1) {\n      return new Error(`A ${componentName} cannot have more than one of these boolean props be true: ${propsList}`);\n    }\n    return bool.isRequired(props, propName, componentName, ...rest);\n  };\n\n  return wrapValidator(validator, `mutuallyExclusiveTrueProps: ${propsList}`, exclusiveProps);\n}\n"]}},"hash":"39dd874ebd5d05f7af36b6e2325dc153","cacheData":{"env":{}}}