{"id":"../node_modules/airbnb-prop-types/build/childrenOfType.js","dependencies":[{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/childrenOfType.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/package.json","includedInParent":true,"mtime":1543301183752},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/.babelrc","includedInParent":true,"mtime":1543300678905},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/package.json","includedInParent":true,"mtime":1542929074985},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/.babelrc","includedInParent":true,"mtime":499162500000},{"name":"array.prototype.find","loc":{"line":5,"column":30},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/childrenOfType.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/array.prototype.find/index.js"},{"name":"./helpers/getComponentName","loc":{"line":9,"column":32},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/childrenOfType.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/helpers/getComponentName.js"},{"name":"./helpers/renderableChildren","loc":{"line":13,"column":34},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/childrenOfType.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/helpers/renderableChildren.js"},{"name":"./helpers/wrapValidator","loc":{"line":17,"column":29},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/childrenOfType.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/helpers/wrapValidator.js"}],"generated":{"js":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayPrototype = require('array.prototype.find');\n\nvar _arrayPrototype2 = _interopRequireDefault(_arrayPrototype);\n\nvar _getComponentName = require('./helpers/getComponentName');\n\nvar _getComponentName2 = _interopRequireDefault(_getComponentName);\n\nvar _renderableChildren = require('./helpers/renderableChildren');\n\nvar _renderableChildren2 = _interopRequireDefault(_renderableChildren);\n\nvar _wrapValidator = require('./helpers/wrapValidator');\n\nvar _wrapValidator2 = _interopRequireDefault(_wrapValidator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction onlyTypes(types, children, componentName) {\n  if (!children.every(function (child) {\n    return child && (0, _arrayPrototype2['default'])(types, function (Type) {\n      return Type === '*' || child.type === Type;\n    });\n  })) {\n    var typeNames = types.map(_getComponentName2['default']).join(', or ');\n    return new TypeError('`' + String(componentName) + '` only accepts children of type ' + String(typeNames));\n  }\n  return null;\n}\n\nfunction isRequired(types, children, componentName) {\n  if (children.length === 0) {\n    var typeNames = types.map(_getComponentName2['default']).join(', or ');\n    return new TypeError('`' + String(componentName) + '` requires at least one node of type ' + String(typeNames));\n  }\n  return null;\n}\n\nfunction childrenOfType() {\n  for (var _len = arguments.length, types = Array(_len), _key = 0; _key < _len; _key++) {\n    types[_key] = arguments[_key];\n  }\n\n  if (types.length < 1) {\n    throw new TypeError('childrenOfType: at least 1 type is required');\n  }\n\n  function validator(props, propName, componentName) {\n    return onlyTypes(types, (0, _renderableChildren2['default'])(props[propName]), componentName);\n  }\n\n  validator.isRequired = function (props, propName, componentName) {\n    var children = (0, _renderableChildren2['default'])(props[propName]);\n    return isRequired(types, children, componentName) || onlyTypes(types, children, componentName);\n  };\n\n  return (0, _wrapValidator2['default'])(validator, 'childrenOfType', types);\n}\n\nexports['default'] = childrenOfType;\n","map":{"version":3,"sources":["../src/childrenOfType.js"],"names":["onlyTypes","types","children","componentName","every","child","Type","type","typeNames","map","getComponentName","join","TypeError","isRequired","length","childrenOfType","validator","props","propName"],"mappings":";;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,QAA1B,EAAoCC,aAApC,EAAmD;AACjD,MAAI,CAACD,SAASE,KAAT,CAAe;AAAA,WAASC,SAAS,iCAAKJ,KAAL,EAAY;AAAA,aAAQK,SAAS,GAAT,IAAgBD,MAAME,IAAN,KAAeD,IAAvC;AAAA,KAAZ,CAAlB;AAAA,GAAf,CAAL,EAAiG;AAC/F,QAAME,YAAYP,MAAMQ,GAAN,CAAUC,6BAAV,EAA4BC,IAA5B,CAAiC,OAAjC,CAAlB;AACA,WAAO,IAAIC,SAAJ,cACAT,aADA,gDACiDK,SADjD,EAAP;AAGD;AACD,SAAO,IAAP;AACD;;AAED,SAASK,UAAT,CAAoBZ,KAApB,EAA2BC,QAA3B,EAAqCC,aAArC,EAAoD;AAClD,MAAID,SAASY,MAAT,KAAoB,CAAxB,EAA2B;AACzB,QAAMN,YAAYP,MAAMQ,GAAN,CAAUC,6BAAV,EAA4BC,IAA5B,CAAiC,OAAjC,CAAlB;AACA,WAAO,IAAIC,SAAJ,cAAmBT,aAAnB,qDAAyEK,SAAzE,EAAP;AACD;AACD,SAAO,IAAP;AACD;;AAED,SAASO,cAAT,GAAkC;AAAA,oCAAPd,KAAO;AAAPA,SAAO;AAAA;;AAChC,MAAIA,MAAMa,MAAN,GAAe,CAAnB,EAAsB;AACpB,UAAM,IAAIF,SAAJ,CAAc,6CAAd,CAAN;AACD;;AAED,WAASI,SAAT,CAAmBC,KAAnB,EAA0BC,QAA1B,EAAoCf,aAApC,EAAmD;AACjD,WAAOH,UAAUC,KAAV,EAAiB,qCAAmBgB,MAAMC,QAAN,CAAnB,CAAjB,EAAsDf,aAAtD,CAAP;AACD;;AAEDa,YAAUH,UAAV,GAAuB,UAACI,KAAD,EAAQC,QAAR,EAAkBf,aAAlB,EAAoC;AACzD,QAAMD,WAAW,qCAAmBe,MAAMC,QAAN,CAAnB,CAAjB;AACA,WAAOL,WAAWZ,KAAX,EAAkBC,QAAlB,EAA4BC,aAA5B,KAA8CH,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,aAA3B,CAArD;AACD,GAHD;;AAKA,SAAO,gCAAca,SAAd,EAAyB,gBAAzB,EAA2Cf,KAA3C,CAAP;AACD;;qBAEcc,c","file":"childrenOfType.js","sourcesContent":["import find from 'array.prototype.find';\n\nimport getComponentName from './helpers/getComponentName';\nimport renderableChildren from './helpers/renderableChildren';\nimport wrapValidator from './helpers/wrapValidator';\n\nfunction onlyTypes(types, children, componentName) {\n  if (!children.every(child => child && find(types, Type => Type === '*' || child.type === Type))) {\n    const typeNames = types.map(getComponentName).join(', or ');\n    return new TypeError(\n      `\\`${componentName}\\` only accepts children of type ${typeNames}`,\n    );\n  }\n  return null;\n}\n\nfunction isRequired(types, children, componentName) {\n  if (children.length === 0) {\n    const typeNames = types.map(getComponentName).join(', or ');\n    return new TypeError(`\\`${componentName}\\` requires at least one node of type ${typeNames}`);\n  }\n  return null;\n}\n\nfunction childrenOfType(...types) {\n  if (types.length < 1) {\n    throw new TypeError('childrenOfType: at least 1 type is required');\n  }\n\n  function validator(props, propName, componentName) {\n    return onlyTypes(types, renderableChildren(props[propName]), componentName);\n  }\n\n  validator.isRequired = (props, propName, componentName) => {\n    const children = renderableChildren(props[propName]);\n    return isRequired(types, children, componentName) || onlyTypes(types, children, componentName);\n  };\n\n  return wrapValidator(validator, 'childrenOfType', types);\n}\n\nexport default childrenOfType;\n"]}},"hash":"891efea20d512c4ee93b99c87f99fab9","cacheData":{"env":{}}}