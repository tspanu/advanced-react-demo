{"id":"../node_modules/airbnb-prop-types/build/childrenHavePropXorChildren.js","dependencies":[{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/childrenHavePropXorChildren.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/package.json","includedInParent":true,"mtime":1543301183752},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/.babelrc","includedInParent":true,"mtime":1543300678905},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/package.json","includedInParent":true,"mtime":1542929074985},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/.babelrc","includedInParent":true,"mtime":499162500000},{"name":"react","loc":{"line":9,"column":21},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/childrenHavePropXorChildren.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/react/index.js"},{"name":"./helpers/wrapValidator","loc":{"line":13,"column":29},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/childrenHavePropXorChildren.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/helpers/wrapValidator.js"}],"generated":{"js":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports['default'] = childrenHavePropXorChildren;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _wrapValidator = require('./helpers/wrapValidator');\n\nvar _wrapValidator2 = _interopRequireDefault(_wrapValidator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction childrenHavePropXorChildren(prop) {\n  if (typeof prop !== 'string' && (typeof prop === 'undefined' ? 'undefined' : _typeof(prop)) !== 'symbol') {\n    throw new TypeError('invalid prop: must be string or symbol');\n  }\n\n  var validator = function () {\n    function childrenHavePropXorChildrenWithProp(_ref, _, componentName) {\n      var children = _ref.children;\n\n      var truthyChildrenCount = 0;\n      var propCount = 0;\n      var grandchildrenCount = 0;\n\n      _react2['default'].Children.forEach(children, function (child) {\n        if (!child) {\n          return;\n        }\n\n        truthyChildrenCount += 1;\n\n        if (child.props[prop]) {\n          propCount += 1;\n        }\n\n        if (_react2['default'].Children.count(child.props.children)) {\n          grandchildrenCount += 1;\n        }\n      });\n\n      if (propCount === truthyChildrenCount && grandchildrenCount === 0 || propCount === 0 && grandchildrenCount === truthyChildrenCount || propCount === 0 && grandchildrenCount === 0) {\n        return null;\n      }\n\n      return new TypeError('`' + String(componentName) + '` requires children to all have prop \\u201C' + String(prop) + '\\u201D, all have children, or all have neither.');\n    }\n\n    return childrenHavePropXorChildrenWithProp;\n  }();\n  validator.isRequired = validator;\n\n  return (0, _wrapValidator2['default'])(validator, 'childrenHavePropXorChildrenWithProp:' + String(prop), prop);\n}\n","map":{"version":3,"sources":["../src/childrenHavePropXorChildren.js"],"names":["childrenHavePropXorChildren","prop","TypeError","validator","childrenHavePropXorChildrenWithProp","_","componentName","children","truthyChildrenCount","propCount","grandchildrenCount","React","Children","forEach","child","props","count","isRequired"],"mappings":";;;;;;qBAGwBA,2B;;AAHxB;;;;AACA;;;;;;AAEe,SAASA,2BAAT,CAAqCC,IAArC,EAA2C;AACxD,MAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,QAAOA,IAAP,yCAAOA,IAAP,OAAgB,QAAhD,EAA0D;AACxD,UAAM,IAAIC,SAAJ,CAAc,wCAAd,CAAN;AACD;;AAED,MAAMC;AAAY,aAASC,mCAAT,OAA2DC,CAA3D,EAA8DC,aAA9D,EAA6E;AAAA,UAA9BC,QAA8B,QAA9BA,QAA8B;;AAC7F,UAAIC,sBAAsB,CAA1B;AACA,UAAIC,YAAY,CAAhB;AACA,UAAIC,qBAAqB,CAAzB;;AAEAC,yBAAMC,QAAN,CAAeC,OAAf,CAAuBN,QAAvB,EAAiC,UAACO,KAAD,EAAW;AAC1C,YAAI,CAACA,KAAL,EAAY;AACV;AACD;;AAEDN,+BAAuB,CAAvB;;AAEA,YAAIM,MAAMC,KAAN,CAAYd,IAAZ,CAAJ,EAAuB;AACrBQ,uBAAa,CAAb;AACD;;AAED,YAAIE,mBAAMC,QAAN,CAAeI,KAAf,CAAqBF,MAAMC,KAAN,CAAYR,QAAjC,CAAJ,EAAgD;AAC9CG,gCAAsB,CAAtB;AACD;AACF,OAdD;;AAgBA,UACGD,cAAcD,mBAAd,IAAqCE,uBAAuB,CAA7D,IACID,cAAc,CAAd,IAAmBC,uBAAuBF,mBAD9C,IAEIC,cAAc,CAAd,IAAmBC,uBAAuB,CAHhD,EAIE;AACA,eAAO,IAAP;AACD;;AAED,aAAO,IAAIR,SAAJ,cAAmBI,aAAnB,2DAA0EL,IAA1E,sDAAP;AACD;;AA9BK,WAAqBG,mCAArB;AAAA,KAAN;AA+BAD,YAAUc,UAAV,GAAuBd,SAAvB;;AAEA,SAAO,gCAAcA,SAAd,kDAAgEF,IAAhE,GAAwEA,IAAxE,CAAP;AACD","file":"childrenHavePropXorChildren.js","sourcesContent":["import React from 'react';\nimport wrapValidator from './helpers/wrapValidator';\n\nexport default function childrenHavePropXorChildren(prop) {\n  if (typeof prop !== 'string' && typeof prop !== 'symbol') {\n    throw new TypeError('invalid prop: must be string or symbol');\n  }\n\n  const validator = function childrenHavePropXorChildrenWithProp({ children }, _, componentName) {\n    let truthyChildrenCount = 0;\n    let propCount = 0;\n    let grandchildrenCount = 0;\n\n    React.Children.forEach(children, (child) => {\n      if (!child) {\n        return;\n      }\n\n      truthyChildrenCount += 1;\n\n      if (child.props[prop]) {\n        propCount += 1;\n      }\n\n      if (React.Children.count(child.props.children)) {\n        grandchildrenCount += 1;\n      }\n    });\n\n    if (\n      (propCount === truthyChildrenCount && grandchildrenCount === 0)\n      || (propCount === 0 && grandchildrenCount === truthyChildrenCount)\n      || (propCount === 0 && grandchildrenCount === 0)\n    ) {\n      return null;\n    }\n\n    return new TypeError(`\\`${componentName}\\` requires children to all have prop “${prop}”, all have children, or all have neither.`);\n  };\n  validator.isRequired = validator;\n\n  return wrapValidator(validator, `childrenHavePropXorChildrenWithProp:${prop}`, prop);\n}\n"]}},"hash":"ff652cd9c19f0ed1c892e380ca4f57b0","cacheData":{"env":{}}}