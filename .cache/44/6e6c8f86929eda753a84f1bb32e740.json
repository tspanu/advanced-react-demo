{"id":"../node_modules/airbnb-prop-types/build/uniqueArray.js","dependencies":[{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/uniqueArray.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/package.json","includedInParent":true,"mtime":1542930367368},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/.babelrc","includedInParent":true,"mtime":1540760186263},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/package.json","includedInParent":true,"mtime":1542929074985},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/.babelrc","includedInParent":true,"mtime":499162500000},{"name":"prop-types","loc":{"line":5,"column":25},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/uniqueArray.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/prop-types/index.js"},{"name":"./helpers/wrapValidator","loc":{"line":7,"column":29},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/uniqueArray.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/helpers/wrapValidator.js"}],"generated":{"js":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _propTypes = require('prop-types');\n\nvar _wrapValidator = require('./helpers/wrapValidator');\n\nvar _wrapValidator2 = _interopRequireDefault(_wrapValidator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction uniqueCountWithSet(arr) {\n  return new Set(arr).size;\n}\n/* istanbul ignore next */\nfunction uniqueCountLegacy(arr) {\n  var seen = [];\n  arr.forEach(function (item) {\n    if (seen.indexOf(item) === -1) {\n      seen.push(item);\n    }\n  });\n  return seen.length;\n}\n\nvar getUniqueCount = typeof Set === 'function' ? uniqueCountWithSet : /* istanbul ignore next */uniqueCountLegacy;\n\nfunction requiredUniqueArray(props, propName, componentName) {\n  for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    rest[_key - 3] = arguments[_key];\n  }\n\n  var result = _propTypes.array.isRequired.apply(_propTypes.array, [props, propName, componentName].concat(rest));\n  if (result != null) {\n    return result;\n  }\n\n  var propValue = props[propName];\n\n  var uniqueCount = getUniqueCount(propValue);\n  if (uniqueCount !== propValue.length) {\n    return new RangeError(String(componentName) + ': values must be unique. ' + (propValue.length - uniqueCount) + ' duplicate values found.');\n  }\n  return null;\n}\n\nfunction uniqueArray(props, propName) {\n  var propValue = props[propName];\n\n  if (propValue == null) {\n    return null;\n  }\n\n  for (var _len2 = arguments.length, rest = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    rest[_key2 - 2] = arguments[_key2];\n  }\n\n  return requiredUniqueArray.apply(undefined, [props, propName].concat(rest));\n}\nuniqueArray.isRequired = requiredUniqueArray;\n\nexports['default'] = function () {\n  return (0, _wrapValidator2['default'])(uniqueArray, 'uniqueArray');\n};\n","map":{"version":3,"sources":["../src/uniqueArray.js"],"names":["uniqueCountWithSet","arr","Set","size","uniqueCountLegacy","seen","forEach","item","indexOf","push","length","getUniqueCount","requiredUniqueArray","props","propName","componentName","rest","result","array","isRequired","propValue","uniqueCount","RangeError","uniqueArray"],"mappings":";;;;AAAA;;AACA;;;;;;AAEA,SAASA,kBAAT,CAA4BC,GAA5B,EAAiC;AAAE,SAAO,IAAIC,GAAJ,CAAQD,GAAR,EAAaE,IAApB;AAA2B;AAC9D;AACA,SAASC,iBAAT,CAA2BH,GAA3B,EAAgC;AAC9B,MAAMI,OAAO,EAAb;AACAJ,MAAIK,OAAJ,CAAY,UAACC,IAAD,EAAU;AACpB,QAAIF,KAAKG,OAAL,CAAaD,IAAb,MAAuB,CAAC,CAA5B,EAA+B;AAC7BF,WAAKI,IAAL,CAAUF,IAAV;AACD;AACF,GAJD;AAKA,SAAOF,KAAKK,MAAZ;AACD;;AAED,IAAMC,iBAAiB,OAAOT,GAAP,KAAe,UAAf,GAA4BF,kBAA5B,GAAiD,0BAA2BI,iBAAnG;;AAEA,SAASQ,mBAAT,CAA6BC,KAA7B,EAAoCC,QAApC,EAA8CC,aAA9C,EAAsE;AAAA,oCAANC,IAAM;AAANA,QAAM;AAAA;;AACpE,MAAMC,SAASC,iBAAMC,UAAN,0BAAiBN,KAAjB,EAAwBC,QAAxB,EAAkCC,aAAlC,SAAoDC,IAApD,EAAf;AACA,MAAIC,UAAU,IAAd,EAAoB;AAClB,WAAOA,MAAP;AACD;;AAJmE,MAMhDG,SANgD,GAMlCP,KANkC,CAM3DC,QAN2D;;AAOpE,MAAMO,cAAcV,eAAeS,SAAf,CAApB;AACA,MAAIC,gBAAgBD,UAAUV,MAA9B,EAAsC;AACpC,WAAO,IAAIY,UAAJ,QAAkBP,aAAlB,mCAA2DK,UAAUV,MAAV,GAAmBW,WAA9E,+BAAP;AACD;AACD,SAAO,IAAP;AACD;;AAED,SAASE,WAAT,CAAqBV,KAArB,EAA4BC,QAA5B,EAA+C;AAAA,MACzBM,SADyB,GACXP,KADW,CACpCC,QADoC;;AAE7C,MAAIM,aAAa,IAAjB,EAAuB;AACrB,WAAO,IAAP;AACD;;AAJ4C,qCAANJ,IAAM;AAANA,QAAM;AAAA;;AAM7C,SAAOJ,sCAAoBC,KAApB,EAA2BC,QAA3B,SAAwCE,IAAxC,EAAP;AACD;AACDO,YAAYJ,UAAZ,GAAyBP,mBAAzB;;qBAEe;AAAA,SAAM,gCAAcW,WAAd,EAA2B,aAA3B,CAAN;AAAA,C","file":"uniqueArray.js","sourcesContent":["import { array } from 'prop-types';\nimport wrapValidator from './helpers/wrapValidator';\n\nfunction uniqueCountWithSet(arr) { return new Set(arr).size; }\n/* istanbul ignore next */\nfunction uniqueCountLegacy(arr) {\n  const seen = [];\n  arr.forEach((item) => {\n    if (seen.indexOf(item) === -1) {\n      seen.push(item);\n    }\n  });\n  return seen.length;\n}\n\nconst getUniqueCount = typeof Set === 'function' ? uniqueCountWithSet : /* istanbul ignore next */ uniqueCountLegacy;\n\nfunction requiredUniqueArray(props, propName, componentName, ...rest) {\n  const result = array.isRequired(props, propName, componentName, ...rest);\n  if (result != null) {\n    return result;\n  }\n\n  const { [propName]: propValue } = props;\n  const uniqueCount = getUniqueCount(propValue);\n  if (uniqueCount !== propValue.length) {\n    return new RangeError(`${componentName}: values must be unique. ${propValue.length - uniqueCount} duplicate values found.`);\n  }\n  return null;\n}\n\nfunction uniqueArray(props, propName, ...rest) {\n  const { [propName]: propValue } = props;\n  if (propValue == null) {\n    return null;\n  }\n\n  return requiredUniqueArray(props, propName, ...rest);\n}\nuniqueArray.isRequired = requiredUniqueArray;\n\nexport default () => wrapValidator(uniqueArray, 'uniqueArray');\n"]}},"hash":"c156b07acc42dbfccabbdda2ab5d9969","cacheData":{"env":{}}}