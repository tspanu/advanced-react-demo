{"id":"../node_modules/airbnb-prop-types/build/elementType.js","dependencies":[{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/elementType.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/package.json","includedInParent":true,"mtime":1543095023469},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/.babelrc","includedInParent":true,"mtime":1543093658556},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/package.json","includedInParent":true,"mtime":1542929074985},{"name":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/.babelrc","includedInParent":true,"mtime":499162500000},{"name":"prop-types","loc":{"line":9,"column":25},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/elementType.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/prop-types/index.js"},{"name":"./and","loc":{"line":11,"column":19},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/elementType.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/and.js"},{"name":"./helpers/getComponentName","loc":{"line":15,"column":32},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/elementType.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/helpers/getComponentName.js"},{"name":"./helpers/wrapValidator","loc":{"line":19,"column":29},"parent":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/elementType.js","resolved":"/Users/tspanu/Code/react-course-projects/expensify-app/node_modules/airbnb-prop-types/build/helpers/wrapValidator.js"}],"generated":{"js":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports['default'] = elementTypeValidator;\n\nvar _propTypes = require('prop-types');\n\nvar _and = require('./and');\n\nvar _and2 = _interopRequireDefault(_and);\n\nvar _getComponentName = require('./helpers/getComponentName');\n\nvar _getComponentName2 = _interopRequireDefault(_getComponentName);\n\nvar _wrapValidator = require('./helpers/wrapValidator');\n\nvar _wrapValidator2 = _interopRequireDefault(_wrapValidator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction getTypeName(Type) {\n  if (typeof Type === 'string') {\n    return Type;\n  }\n  var type = (0, _getComponentName2['default'])(Type);\n\n  /* istanbul ignore next */ // in environments where functions do not have names\n  return type || 'Anonymous Component';\n}\n\nfunction validateElementType(Type, props, propName, componentName) {\n  var type = props[propName].type;\n\n\n  if (type === Type) {\n    return null;\n  }\n\n  return new TypeError(String(componentName) + '.' + String(propName) + ' must be a React element of type ' + String(getTypeName(Type)));\n}\n\nfunction elementTypeValidator(Type) {\n  if (Type === '*') {\n    return (0, _wrapValidator2['default'])(_propTypes.element, 'elementType(*)', Type);\n  }\n\n  if (typeof Type !== 'string' && typeof Type !== 'function') {\n    throw new TypeError('Type must be a React Component, an HTML element tag name, or \"*\". Got an ' + (typeof Type === 'undefined' ? 'undefined' : _typeof(Type)));\n  }\n\n  function elementType(props, propName, componentName) {\n    if (props[propName] == null) {\n      return null;\n    }\n\n    for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return validateElementType.apply(undefined, [Type, props, propName, componentName].concat(rest));\n  }\n  elementType.isRequired = elementType; // covered by and + element\n\n  var typeName = getTypeName(Type);\n  var validatorName = 'elementType(' + String(typeName) + ')';\n  return (0, _wrapValidator2['default'])((0, _and2['default'])([_propTypes.element, elementType], validatorName), validatorName, Type);\n}\n","map":{"version":3,"sources":["../src/elementType.js"],"names":["elementTypeValidator","getTypeName","Type","type","validateElementType","props","propName","componentName","TypeError","element","elementType","rest","isRequired","typeName","validatorName"],"mappings":";;;;;;qBAyBwBA,oB;;AAzBxB;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOA,IAAP;AACD;AACD,MAAMC,OAAO,mCAAiBD,IAAjB,CAAb;;AAEA,4BANyB,CAME;AAC3B,SAAOC,QAAQ,qBAAf;AACD;;AAED,SAASC,mBAAT,CAA6BF,IAA7B,EAAmCG,KAAnC,EAA0CC,QAA1C,EAAoDC,aAApD,EAAmE;AAAA,MACzDJ,IADyD,GAChDE,MAAMC,QAAN,CADgD,CACzDH,IADyD;;;AAGjE,MAAIA,SAASD,IAAb,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,SAAO,IAAIM,SAAJ,QAAiBD,aAAjB,iBAAkCD,QAAlC,iDAA8EL,YAAYC,IAAZ,CAA9E,EAAP;AACD;;AAEc,SAASF,oBAAT,CAA8BE,IAA9B,EAAoC;AACjD,MAAIA,SAAS,GAAb,EAAkB;AAChB,WAAO,gCAAcO,kBAAd,EAAuB,gBAAvB,EAAyCP,IAAzC,CAAP;AACD;;AAED,MAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,UAAhD,EAA4D;AAC1D,UAAM,IAAIM,SAAJ,uFAAiGN,IAAjG,yCAAiGA,IAAjG,GAAN;AACD;;AAED,WAASQ,WAAT,CAAqBL,KAArB,EAA4BC,QAA5B,EAAsCC,aAAtC,EAA8D;AAC5D,QAAIF,MAAMC,QAAN,KAAmB,IAAvB,EAA6B;AAC3B,aAAO,IAAP;AACD;;AAH2D,sCAANK,IAAM;AAANA,UAAM;AAAA;;AAI5D,WAAOP,sCAAoBF,IAApB,EAA0BG,KAA1B,EAAiCC,QAAjC,EAA2CC,aAA3C,SAA6DI,IAA7D,EAAP;AACD;AACDD,cAAYE,UAAZ,GAAyBF,WAAzB,CAfiD,CAeX;;AAEtC,MAAMG,WAAWZ,YAAYC,IAAZ,CAAjB;AACA,MAAMY,wCAA+BD,QAA/B,OAAN;AACA,SAAO,gCAAc,sBAAI,CAACJ,kBAAD,EAAUC,WAAV,CAAJ,EAA4BI,aAA5B,CAAd,EAA0DA,aAA1D,EAAyEZ,IAAzE,CAAP;AACD","file":"elementType.js","sourcesContent":["import { element } from 'prop-types';\nimport and from './and';\nimport getComponentName from './helpers/getComponentName';\nimport wrapValidator from './helpers/wrapValidator';\n\nfunction getTypeName(Type) {\n  if (typeof Type === 'string') {\n    return Type;\n  }\n  const type = getComponentName(Type);\n\n  /* istanbul ignore next */ // in environments where functions do not have names\n  return type || 'Anonymous Component';\n}\n\nfunction validateElementType(Type, props, propName, componentName) {\n  const { type } = props[propName];\n\n  if (type === Type) {\n    return null;\n  }\n\n  return new TypeError(`${componentName}.${propName} must be a React element of type ${getTypeName(Type)}`);\n}\n\nexport default function elementTypeValidator(Type) {\n  if (Type === '*') {\n    return wrapValidator(element, 'elementType(*)', Type);\n  }\n\n  if (typeof Type !== 'string' && typeof Type !== 'function') {\n    throw new TypeError(`Type must be a React Component, an HTML element tag name, or \"*\". Got an ${typeof Type}`);\n  }\n\n  function elementType(props, propName, componentName, ...rest) {\n    if (props[propName] == null) {\n      return null;\n    }\n    return validateElementType(Type, props, propName, componentName, ...rest);\n  }\n  elementType.isRequired = elementType; // covered by and + element\n\n  const typeName = getTypeName(Type);\n  const validatorName = `elementType(${typeName})`;\n  return wrapValidator(and([element, elementType], validatorName), validatorName, Type);\n}\n"]}},"hash":"722e459053534e77d4a0c0996d8cf680","cacheData":{"env":{}}}